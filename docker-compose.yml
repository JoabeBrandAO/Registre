 version: '3.8'

services:
  # Frontend React/Vue
  frontend:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8000
    volumes:
      - ./src/frontend:/app
      - /app/node_modules
    depends_on:
      - backend

  # Backend Python
  backend:
    build:
      context: ./src/backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://registre:registre123@db:5432/registre
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=True
    volumes:
      - ./src/backend:/app
    depends_on:
      - db
      - redis

  # Base de dados PostgreSQL
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=registre
      - POSTGRES_USER=registre
      - POSTGRES_PASSWORD=registre123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infra/docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"

  # Redis para cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Nginx como reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./infra/docker/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend

  # Prometheus para m√©tricas
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./infra/docker/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus

  # Grafana para dashboards
  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infra/docker/grafana:/etc/grafana/provisioning

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:
